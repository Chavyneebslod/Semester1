package Auctioning;


/**
* Auctioning/AuctionPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from src/auctioning.idl
* Tuesday, 30 November 2010 12:56:02 o'clock GMT
*/

public abstract class AuctionPOA extends org.omg.PortableServer.Servant
 implements Auctioning.AuctionOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getItem", new java.lang.Integer (0));
    _methods.put ("getAllItems", new java.lang.Integer (1));
    _methods.put ("placeBid", new java.lang.Integer (2));
    _methods.put ("addItem", new java.lang.Integer (3));
    _methods.put ("login", new java.lang.Integer (4));
    _methods.put ("logout", new java.lang.Integer (5));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Auctioning/Auction/getItem
       {
         String itemRef = in.read_string ();
         Auctioning.b $result = null;
         $result = this.getItem (itemRef);
         out = $rh.createReply();
         Auctioning.bHelper.write (out, $result);
         break;
       }

       case 1:  // Auctioning/Auction/getAllItems
       {
         Auctioning.b $result[] = null;
         $result = this.getAllItems ();
         out = $rh.createReply();
         Auctioning.itemsHelper.write (out, $result);
         break;
       }

       case 2:  // Auctioning/Auction/placeBid
       {
         String itemRef = in.read_string ();
         String poster = in.read_string ();
         double bid = in.read_double ();
         String $result = null;
         $result = this.placeBid (itemRef, poster, bid);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // Auctioning/Auction/addItem
       {
         Auctioning.b b = Auctioning.itemInfoHelper.read (in);
         this.addItem (b);
         out = $rh.createReply();
         break;
       }

       case 4:  // Auctioning/Auction/login
       {
         String uname = in.read_string ();
         String password = in.read_string ();
         String $result = null;
         $result = this.login (uname, password);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // Auctioning/Auction/logout
       {
         String uname = in.read_string ();
         this.logout (uname);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Auctioning/Auction:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Auction _this() 
  {
    return AuctionHelper.narrow(
    super._this_object());
  }

  public Auction _this(org.omg.CORBA.ORB orb) 
  {
    return AuctionHelper.narrow(
    super._this_object(orb));
  }


} // class AuctionPOA
